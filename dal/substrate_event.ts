import {pgTable, serial, text, char, varchar, bigint as dBigint, smallint, jsonb, boolean} from "drizzle-orm/pg-core";

export const eventTableColumns = {
  eventSyntheticId: serial('event_synthetic_id').primaryKey(),
  blockNumber: dBigint('block_number', {mode: 'number'}),
  blockHash: char('block_hash', {length: 64}),
  blockTimestamp: dBigint('block_timestamp', {mode: 'number'}),
  extrinsicSyntheticId: dBigint('extrinsic_synthetic_id', {mode: 'number'}),
  extrinsicIndex: smallint('extrinsic_index'),
  extrinsicHash: char('extrinsic_hash', {length: 64}),
  ethereumHash: char('ethereum_hash', {length: 64}),
  eventIndex: smallint('event_index'),
  metadataVersion: smallint('metadata_version'),
  eventSection: varchar('event_section', {length: 255}),
  eventName: varchar('event_name', {length: 255}),
  addressOriginator: varchar('address_originator', {length: 64}),
  addressFrom: varchar('address_from', {length: 64}),
  addressFromIsEthereum: boolean('address_from_is_ethereum'),
  addressTo: varchar('address_to', {length: 64}),
  addressToIsEthereum: boolean('address_to_is_ethereum'),
  collectionIdFrom: dBigint('collection_id_from', {mode: 'number'}),
  collectionIdTo: dBigint('collection_id_to', {mode: 'number'}),
  tokenIdFrom: dBigint('token_id_from', {mode: 'number'}),
  tokenIdTo: dBigint('token_id_to', {mode: 'number'}),
  tokenPartsAmount: dBigint('token_parts_amount', {mode: 'bigint'}),
  eventData: jsonb('event_data'),
  isParsed: boolean('is_parsed').notNull().default(false),
}
